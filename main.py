# -*- coding: utf-8 -*-
import sqlite3
from telebot import *
import telebot
import random
import threading
import requests
import json

lock = threading.Lock()

# database connect
global db, sql
db = sqlite3.connect('newbot.db', check_same_thread=False)
sql = db.cursor()
sql.execute("""CREATE TABLE IF NOT EXISTS files (
    usid BIGINT,
    pass TEXT,
    channel BIGINT,
    info TEXT,
    fake TEXT,
    type TEXT
)""")
db.commit()

# telegram api connect
with open('config.json', 'r') as config_file:
    config = json.load(config_file)

token = config["token"]
bot = telebot.TeleBot(token)

# handlers
# start message
@bot.message_handler(commands=["start"])
def start(message):
  info = telebot.util.extract_arguments(message.text)
  sql.execute(f"SELECT pass FROM files WHERE pass = '{info}'")
  if sql.fetchone() is None:
    bot.send_message(message.chat.id, "üëã <b>–ü—Ä–∏–≤–µ—Ç!</b>\n\n<i>–Ø –º–æ–≥—É —Å–∫—Ä—ã—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Ç–µ—Ö, –∫—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ —Ç–≤–æ–π –∫–∞–Ω–∞–ª.</i>\n\n<b>–¢–µ–±–µ –≤—Å–µ–≥–æ –ª–∏—à—å –Ω—É–∂–Ω–æ:</b>\n\n1. –î–æ–±–∞–≤–∏—Ç—å –º–µ–Ω—è –≤ —Å–≤–æ–π –∫–∞–Ω–∞–ª –∏ –≤—ã–¥–∞—Ç—å –∞–¥–º–∏–Ω–∞ —Å –ø—Ä–∞–≤–∞–º–∏ - '–ò–∑–º–µ–Ω—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ' –∏ '–î–æ–±–∞–≤–ª—è—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'\n2. –ü–æ–ª—É—á–∏—Ç—å ID —Å–≤–æ–µ–≥–æ –∫–∞–Ω–∞–ª–∞. –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ—Å–ª–∞–≤ –±–æ—Ç—É @myidbot —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —Å–≤–æ–µ–≥–æ –∫–∞–Ω–∞–ª–∞\n3. –ü—Ä–æ–ø–∏—Å–∞—Ç—å –∫–æ–º–º–∞–Ω–¥—É /new –∏ —Å–ª–µ–¥–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º\n–¢–∞–∫ –∂–µ —è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é <b>–ê—É–¥–∏–æ –§–∞–π–ª—ã –∏ –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è!</b>\n–ß—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ —Ñ–∞–π–ª –≤ —ç—Ç–æ–≥–æ –±–æ—Ç–∞, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —ç—Ç–æ—Ç –∞—É–¥–∏–æ —Ñ–∞–π–ª –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º!(–∫–æ–º–º–∞–Ω–¥—É /new –Ω–µ –ø–∏—Å–∞—Ç—å)\n\n–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @kirillsaint_info, https://kirillsaint.xyz\n–°–≤—è–∑—å —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º: @saintfukk2, @kirillsaint_bot\n–ë–ª–æ–≥ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞: @kirillsaint", parse_mode="HTML")
  else:
  	try:
	  	for ci in sql.execute(f"SELECT channel FROM files WHERE pass = '{info}'"):
	  		CHAT_ID = ci[0]
	  	USER_ID = message.chat.id
	  	response = requests.get(f'https://api.telegram.org/bot{token}/getChatMember?chat_id={CHAT_ID}&user_id={USER_ID}')
	  	status = json.loads(response.text)["result"]["status"]
	  	if status == 'left':
	  		sub = False
	  	else:
	  		sub = True
  	except:
  		sub = False

  	try:
  		if sub == True:
  			for t in sql.execute(f"SELECT type FROM files WHERE pass = '{info}'"):
  				typ = t[0]
  			print(typ)
  			if typ == 'text':
  				for i in sql.execute(f"SELECT info FROM files WHERE pass = '{info}'"):
  					info = i[0]
  				bot.send_message(message.chat.id, info)
  			elif typ == 'audio':
  				bot.send_audio(message.chat.id, open(f"{info}-audio.mp3", "rb"))
  			elif typ == 'voice':
  				bot.send_voice(message.chat.id, open(f"{info}-voice.ogg", "rb"))
  		else:
  			for f in sql.execute(f"SELECT fake FROM files WHERE pass = '{info}'"):
  				fake = f[0]
  			bot.send_message(message.chat.id, fake)
  	except:
  		try:
  			for f in sql.execute(f"SELECT fake FROM files WHERE pass = '{info}'"):
  				fake = f[0]
  			bot.send_message(message.chat.id, fake)
  		except:
  			bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞!")

# new message
@bot.message_handler(commands=["new"])
def new1(message):
    bot.send_message(message.chat.id, "*–í–≤–µ–¥–∏—Ç–µ ID –∫–∞–Ω–∞–ª–∞:* ", parse_mode="Markdown")
    bot.register_next_step_handler(message, new2)

# functions
def new2(message):
    try:
        global ch
        ch = int(message.text)
        bot.send_message(message.chat.id, "*–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:* ", parse_mode="Markdown")
        bot.register_next_step_handler(message, new3)
    except:
        bot.send_message(message.chat.id, "–≠—Ç–æ –Ω–µ –∞–π–¥–∏ –∫–∞–Ω–∞–ª–∞! ", parse_mode="Markdown")
 
def new3(message):
    global info
    info = message.text
    bot.send_message(message.chat.id, "*–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª:* ", parse_mode="Markdown")
    bot.register_next_step_handler(message, new4)

def new4(message):
	global fake
	fake = message.text
	try:
	  chars = 'abcdefghyjklmnopqrstuvwxyz'
	  chars += chars.upper()
	  nums = str(1234567890)
	  chars += nums
	  length = 8
	  pas = "".join(random.sample(chars, length))
	  finfo = [message.chat.id, pas, ch, info, fake, 'text']
	  sql.execute(f"INSERT INTO files VALUES (?, ?, ?, ?, ?, ?)", finfo)
	  db.commit()
	  bot.send_message(message.chat.id, f"*–¢–≤–æ–π —Ç–µ–∫—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ:* https://t.me/channeltextbot?start={pas}", parse_mode="Markdown")
	except:
	  bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞!")

@bot.message_handler(content_types=["audio"])
def audio(message):
	try:
		chars = 'abcdefghyjklmnopqrstuvwxyz'
		chars += chars.upper()
		nums = str(1234567890)
		chars += nums
		length = 9
		global pas
		global f
		global fa
		pas = "".join(random.sample(chars, length))
		file_info = bot.get_file(message.audio.file_id)
		file = requests.get('https://api.telegram.org/file/bot{0}/{1}'.format(token, file_info.file_path))
		with open(f'{pas}-audio.mp3','wb') as f:
			f.write(file.content)
		fa = f'{pas}-audio.mp3'
		bot.send_message(message.chat.id, "*–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª:* ", parse_mode="Markdown")
		bot.register_next_step_handler(message, newfile1)
	except:
		bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞!')

def newfile1(message):
	try:
		global fake
		fake = message.text
		bot.send_message(message.chat.id, "*–í–≤–µ–¥–∏—Ç–µ ID –∫–∞–Ω–∞–ª–∞:* ", parse_mode="Markdown")
		bot.register_next_step_handler(message, newfile)
	except:
		bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞!')

def newfile(message):
	try:
		ch = message.text
		finfo = [message.chat.id, pas, ch, fa, fake, 'audio']
		sql.execute(f"INSERT INTO files VALUES (?, ?, ?, ?, ?, ?)", finfo)
		db.commit()
		bot.send_message(message.chat.id, f"*–¢–≤–æ–π —Ñ–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ:* https://t.me/channeltextbot?start={pas}", parse_mode="Markdown")
	except:
		bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞!')

@bot.message_handler(content_types=["voice"])
def voice(message):
	try:
		chars = 'abcdefghyjklmnopqrstuvwxyz'
		chars += chars.upper()
		nums = str(1234567890)
		chars += nums
		length = 9
		global pas
		global f
		global fa
		pas = "".join(random.sample(chars, length))
		file_info = bot.get_file(message.voice.file_id)
		file = requests.get('https://api.telegram.org/file/bot{0}/{1}'.format(token, file_info.file_path))
		with open(f'{pas}-voice.ogg','wb') as f:
			f.write(file.content)
		fa = f'{pas}-voice.mp3'
		bot.send_message(message.chat.id, "*–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª:* ", parse_mode="Markdown")
		bot.register_next_step_handler(message, newvoice1)
	except:
		bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞!')

def newvoice1(message):
	try:
		global fake
		fake = message.text
		bot.send_message(message.chat.id, "*–í–≤–µ–¥–∏—Ç–µ ID –∫–∞–Ω–∞–ª–∞:* ", parse_mode="Markdown")
		bot.register_next_step_handler(message, newvoice)
	except:
		bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞!')

def newvoice(message):
	try:
		ch = message.text
		finfo = [message.chat.id, pas, ch, fa, fake, 'voice']
		sql.execute(f"INSERT INTO files VALUES (?, ?, ?, ?, ?, ?)", finfo)
		db.commit()
		bot.send_message(message.chat.id, f"*–¢–≤–æ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ:* https://t.me/channeltextbot?start={pas}", parse_mode="Markdown")
	except:
		bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞!')


# polling
bot.polling(none_stop=True)

# by @kirillsaint / https://github.com/kirillsaint/
